[{"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\index.js":"1","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\App.js":"2","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Dashboard.js":"3","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Home.js":"4","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Signup.js":"5","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Prompts.js":"6","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Suggestions.js":"7","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\utils\\helpers.js":"8","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\utils\\api.js":"9","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\components\\Suggestion.js":"10","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\components\\Prompt.js":"11","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Activity.js":"12","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\components\\Date.js":"13","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\utils\\auth.js":"14","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\components\\Nav.js":"15"},{"size":275,"mtime":1638847761934,"results":"16","hashOfConfig":"17"},{"size":964,"mtime":1638889539297,"results":"18","hashOfConfig":"17"},{"size":1275,"mtime":1638892606540,"results":"19","hashOfConfig":"17"},{"size":2920,"mtime":1638833959202,"results":"20","hashOfConfig":"17"},{"size":5136,"mtime":1638812730738,"results":"21","hashOfConfig":"17"},{"size":2032,"mtime":1638762649678,"results":"22","hashOfConfig":"17"},{"size":2556,"mtime":1638813890777,"results":"23","hashOfConfig":"17"},{"size":663,"mtime":1638811113112,"results":"24","hashOfConfig":"17"},{"size":1994,"mtime":1638895070166,"results":"25","hashOfConfig":"17"},{"size":569,"mtime":1638896970219,"results":"26","hashOfConfig":"17"},{"size":1065,"mtime":1638889762661,"results":"27","hashOfConfig":"17"},{"size":7348,"mtime":1638895900459,"results":"28","hashOfConfig":"17"},{"size":723,"mtime":1638814337424,"results":"29","hashOfConfig":"17"},{"size":2246,"mtime":1638848446683,"results":"30","hashOfConfig":"17"},{"size":1322,"mtime":1638889226392,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"jhs8p9",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\index.js",[],["66","67"],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\App.js",[],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Dashboard.js",[],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Home.js",["68"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { authenticateUser } from '../utils/api';\r\nimport Auth from '../utils/auth';\r\nconst Home = () => {\r\n\r\n    const [userData, setUserData] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserData({ ...userData, [name]: value })\r\n    }\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const res = await authenticateUser(userData);\r\n\r\n            if (!res.ok) {\r\n                setErrorMessage(`User or Password incorrect`);\r\n                throw new Error(`Couldn't authenticate user`);\r\n            }\r\n\r\n            const user = await res.json();\r\n            console.log(user);\r\n\r\n            Auth.login(user.token);\r\n            //history.push('/dashboard');\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"home-container\">\r\n            <h1 class=\"welcome\">Welcome to Rendez-Vous!</h1>\r\n\r\n            <div class=\"card-login\">\r\n                <h2 class=\"login-text\">Log In to Your Account:</h2>\r\n                <form class=\"login-form\">\r\n                    {/* <label class=\"login-font\" htmlFor=\"username-login\">Username</label> */}\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"username-login\"\r\n                        id=\"username-login\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        value={userData.username}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    {/* <label class=\"login-font\" htmlFor=\"password-login\">Password</label> */}\r\n                    <input\r\n                        type=\"password\"\r\n                        class=\"password-login\"\r\n                        id=\"password-login\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={userData.password}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <button class=\"btn btn-success submit-button\" onClick={handleFormSubmit}>Login</button>\r\n                </form>\r\n                {errorMessage && (\r\n                    <div>\r\n                        <p className=\"error-text\">{errorMessage}</p>\r\n                    </div>\r\n                )}\r\n                <Link to=\"/signup\">\r\n                    <button className=\"btn btn-lg btn-danger signup-button\">Click here to sign up for an account. It's free!</button>\r\n                </Link>\r\n            </div>\r\n        \r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Signup.js",[],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Prompts.js",[],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Suggestions.js",["69"],"import React, { useState, useEffect } from 'react';\r\nimport { getAllSuggestions } from '../utils/api';\r\nimport Suggestion from '../components/Suggestion';\r\n\r\nconst Suggestions = (props) => {\r\n\r\n    const [suggestionList, setSuggestionList] = useState([]);\r\n    const [order, setOrder] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n\r\n            try {\r\n                const res = await getAllSuggestions();    \r\n                if (!res.ok) {\r\n                    throw new Error('No list of suggestions');\r\n                }\r\n                const suggestionList = await res.json();\r\n\r\n                var randomSuggestions = [];\r\n\r\n                if (props.location.state) {\r\n                    console.log(props.location.state)\r\n                    console.log(suggestionList)\r\n                    for (let i = 0; i < suggestionList.length; i++) {\r\n                        if (props.location.state.every(elem => suggestionList[i].characteristics.includes(elem))) {\r\n                            randomSuggestions.push(suggestionList[i]);\r\n                        }\r\n                    }\r\n                    for (var i = randomSuggestions.length - 1; i > 0; i--) {\r\n                        var j = Math.floor(Math.random() * (i + 1));\r\n                        var temp = randomSuggestions[i];\r\n                        randomSuggestions[i] = randomSuggestions[j];\r\n                        randomSuggestions[j] = temp;\r\n                    }\r\n            \r\n                    console.log(randomSuggestions);\r\n                }\r\n                setSuggestionList(randomSuggestions);\r\n                \r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n    \r\n            \r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    \r\n    const handleSuggestions = () => {\r\n        if (order + 3 < suggestionList.length ) {\r\n            setOrder(order + 3);\r\n        } else {\r\n            setOrder(0);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <div class=\"suggestion-container\">\r\n            { order < suggestionList.length  && <Suggestion sugg={suggestionList[order]} />}\r\n            { order + 1 < suggestionList.length  && <Suggestion sugg={suggestionList[order + 1]} />}\r\n            { order + 2 < suggestionList.length  && <Suggestion sugg={suggestionList[order + 2]} />}\r\n        \r\n        </div>\r\n        <button class=\"btn btn-danger next-suggestion\" onClick={handleSuggestions}>Next Suggestions</button>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Suggestions;","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\utils\\helpers.js",[],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\utils\\api.js",[],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\components\\Suggestion.js",[],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\components\\Prompt.js",[],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\pages\\Activity.js",["70","71","72","73"],"import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getLocation, getNearbyPlaces, getSuggestion } from '../utils/api';\r\nimport { Modal, Button, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { validateEmail } from '../utils/helpers';\r\nimport { createDate } from '../utils/api';\r\nimport { formatDate } from '../utils/helpers';\r\n\r\nconst Activity = (props) => {\r\n    const [suggestion, setSuggestion] = useState([]);\r\n    let { id } = useParams();\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [dateInfo, setDateInfo] = useState({\r\n        title: '',\r\n        partnerEmail: '',\r\n        message: '',\r\n        activity: id,\r\n        date: '',\r\n    });\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const [latitude, setLatitude] = useState(0);\r\n    const [longitude, setLongitude] = useState(0);\r\n    const [locations, setLocations] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const showPosition = (position) => {\r\n            setLatitude(position.coords.latitude);\r\n            setLongitude(position.coords.longitude)\r\n        }\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition);\r\n        } else {\r\n            alert(\"Geolocation is not supported by this browser.\");\r\n        }\r\n\r\n\r\n        const getLocations = async (lat, lon, suggestion) => {\r\n            try {\r\n                console.log(suggestion.term);\r\n                const res = await getNearbyPlaces(lat, lon, suggestion.term);\r\n\r\n                if (!res.ok) {\r\n                    throw new Error('No nearby locations');\r\n                }\r\n\r\n                const locations = await res.json()\r\n\r\n                console.log(locations);\r\n                setLocations(locations.businesses)\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        }\r\n\r\n        const getSuggestionInfo = async () => {\r\n            try {\r\n                const res = await getSuggestion(id);\r\n\r\n                if (!res.ok) {\r\n                    throw new Error('No list of suggestions');\r\n                }\r\n                const suggestion = await res.json();\r\n                setSuggestion(suggestion);\r\n                console.log(suggestion);\r\n\r\n                getLocations(latitude, longitude, suggestion);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        } \r\n        \r\n        getSuggestionInfo();\r\n    }, [id])\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        setDateInfo({ ...dateInfo, [name]: value })\r\n    }\r\n\r\n    const handleInputSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validateEmail(dateInfo.partnerEmail)) {\r\n            setErrorMessage('Email is invalid');\r\n            return;\r\n        }\r\n\r\n        console.log(dateInfo);\r\n        try {\r\n            const res = await createDate(dateInfo);\r\n            const date = await res.json();\r\n            console.log(date);\r\n            if (!res.ok) {\r\n                console.log('error');\r\n                throw new Error(`Couldn't create date`);\r\n            }\r\n\r\n            history.push('/dashboard');\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className=\"d-flex align-items-center justify-content-center flex-column\"\r\n                style={{ height: \"100vh\" }}\r\n            >\r\n                <h1>{suggestion.name}</h1>\r\n\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                    Create Date\r\n                </Button>\r\n\r\n                <div class=\"map-location\">\r\n                    <ListGroup>\r\n                    {locations.map(location => {\r\n                        return <a href={location.url} target=\"_blank\"><ListGroupItem class=\"collection-item\">{location.price} {location.name} | {location.location.address1}, {location.location.city} | {location.rating} Rating | Phone: {location.phone}</ListGroupItem></a>\r\n                    })}\r\n                    </ListGroup>\r\n                </div>\r\n\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Send invitation to your date</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <label htmlFor=\"date-title\" id=\"label-date-title\">Date's title</label>\r\n                        <input\r\n                            className=\"date-title\"\r\n                            id=\"date-title\"\r\n                            name=\"title\"\r\n                            type=\"text\"\r\n                            value={dateInfo.title}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <label htmlFor=\"date-email\" id=\"label-date-email\">Date's email</label>\r\n                        <input\r\n                            className=\"date-email\"\r\n                            id=\"date-email\"\r\n                            name=\"partnerEmail\"\r\n                            type=\"email\"\r\n                            value={dateInfo.partnerEmail}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <label htmlFor=\"date-message\" id=\"label-date-message\">Message</label>\r\n                        <textarea\r\n                            className=\"date-message\"\r\n                            id=\"date-message\"\r\n                            name=\"message\"\r\n                            value={dateInfo.message}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <div style={{\r\n                            margin: 'auto',\r\n                            display: 'block',\r\n                            width: 'fit-content'\r\n                        }}>\r\n                        <label htmlFor=\"date-date\" id=\"date-date\">When is your date?</label>\r\n                            <TextField\r\n                                id=\"date-date\"\r\n                                label=\"Choose the date\"\r\n                                type=\"date\"\r\n                                name=\"date\"\r\n                                defaultValue=\"2021-12-07\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        {errorMessage && (\r\n                            <div>\r\n                                <p className=\"error-text\">{errorMessage}</p>\r\n                            </div>\r\n                        )}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={handleInputSubmit}>\r\n                            Create\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n    }\r\n    export default Activity;","C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\components\\Date.js",[],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\utils\\auth.js",[],"C:\\Users\\andre\\Desktop\\Bootcamp\\Project3\\date-planner-app\\client\\src\\components\\Nav.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":13,"column":11,"nodeType":"80","messageId":"81","endLine":13,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":49,"column":8,"nodeType":"84","endLine":49,"endColumn":10,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"86","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":21},{"ruleId":"78","severity":1,"message":"87","line":8,"column":10,"nodeType":"80","messageId":"81","endLine":8,"endColumn":20},{"ruleId":"82","severity":1,"message":"88","line":85,"column":8,"nodeType":"84","endLine":85,"endColumn":12,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":134,"column":32,"nodeType":"92","messageId":"93","endLine":134,"endColumn":71,"fix":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'getLocation' is defined but never used.","'formatDate' is defined but never used.","React Hook useEffect has missing dependencies: 'latitude' and 'longitude'. Either include them or remove the dependency array.",["98"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"99","text":"100"},"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},[4077,4077]," rel=\"noreferrer\"","Update the dependencies array to be: [props.location.state]",{"range":"105","text":"106"},"Update the dependencies array to be: [id, latitude, longitude]",{"range":"107","text":"108"},[1784,1786],"[props.location.state]",[2699,2703],"[id, latitude, longitude]"]